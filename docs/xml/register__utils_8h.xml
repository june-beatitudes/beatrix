<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="register__utils_8h" kind="file" language="C++">
    <compoundname>register_utils.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="register__utils_8c" local="no">kernel/src/register_utils.c</includedby>
    <includedby refid="rtc_8c" local="no">kernel/src/rtc.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>kernel/include/register_utils.h</label>
        <link refid="register__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>kernel/include/register_utils.h</label>
        <link refid="register__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel/src/register_utils.c</label>
        <link refid="register__utils_8c"/>
      </node>
      <node id="3">
        <label>kernel/src/rtc.c</label>
        <link refid="rtc_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="register__utils_8h_1a3c04f34a58adc5c29dd8f4160adb9a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bea_set_reg_bits</definition>
        <argsstring>(volatile uint32_t *base_addr, uint8_t msb, uint8_t lsb, uint32_t value)</argsstring>
        <name>bea_set_reg_bits</name>
        <param>
          <type>volatile uint32_t *</type>
          <declname>base_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lsb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set bits in a hardware memory-mapped register (assumed to be 32 bits wide). Writing to an incorrect memory address is undefined behavior and may trigger a hard fault or other interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The base memory address of the register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msb</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;highest&quot; bit (inclusive) to set, zero-indexed, big-endian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lsb</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;lowest&quot; bit (inclusive) to set, zero-indexed, big-endian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write into that range of the register. Only the lowest <computeroutput>(1 + msb - lsb)</computeroutput> bits will be written, all others will be discarded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/include/register_utils.h" line="18" column="6" declfile="kernel/include/register_utils.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="register__utils_8h_1a44dad41f9a6b361221dfd97e36343764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t bea_get_reg_bits</definition>
        <argsstring>(volatile uint32_t *base_addr, uint8_t msb, uint8_t lsb)</argsstring>
        <name>bea_get_reg_bits</name>
        <param>
          <type>volatile uint32_t *</type>
          <declname>base_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lsb</declname>
        </param>
        <briefdescription>
<para>Get bits in a hardware memory-mapped register (assumed to be 32 bits wide). Reading from an incorrect memory address is undefined behavior and may trigger a hard fault or other interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The base memory address of the register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msb</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;highest&quot; bit (inclusive) to read, zero-indexed, big-endian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lsb</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;lowest&quot; bit (inclusive) to read, zero-indexed, big-endian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/include/register_utils.h" line="30" column="10" declfile="kernel/include/register_utils.h" declline="30" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BEA_REGISTER_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEA_REGISTER_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="register__utils_8h_1a3c04f34a58adc5c29dd8f4160adb9a7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="register__utils_8h_1a3c04f34a58adc5c29dd8f4160adb9a7f" kindref="member">bea_set_reg_bits</ref><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*base_addr,<sp/>uint8_t<sp/>msb,<sp/>uint8_t<sp/>lsb,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="register__utils_8h_1a44dad41f9a6b361221dfd97e36343764" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="register__utils_8h_1a44dad41f9a6b361221dfd97e36343764" kindref="member">bea_get_reg_bits</ref><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*base_addr,<sp/>uint8_t<sp/>msb,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>lsb);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="kernel/include/register_utils.h"/>
  </compounddef>
</doxygen>
